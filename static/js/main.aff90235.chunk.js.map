{"version":3,"sources":["api/request.js","api/people.js","components/comments/Comments.jsx","components/peopleList/PeopleList.jsx","components/Loader/Loader.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["request","url","fetch","then","response","json","result","results","catch","Error","getPeople","Comments","deleteComment","comments","className","map","comment","title","type","onClick","id","defaultProps","PeopleList","name","birth","humanId","useState","setComments","commentRef","useRef","useEffect","commentBox","JSON","parse","localStorage","getItem","onSubmit","event","preventDefault","userComment","current","value","prepearedComment","uuidv4","prevComments","newComments","setItem","stringify","submitHandler","placeholder","ref","required","prevComment","filteredComments","filter","Loader","App","heroes","setHeroes","loading","setLoading","heroFromLocalStorage","allHeroes","human","heroesWithId","birth_year","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff90235.chunk.js","sourcesContent":["export const swapiUrl = '/swapi.dev/api/';\n\nconst request = (url) => fetch(url)\n  .then((response) => response.json())\n  .then((result) => result.results)\n  .catch(() => new Error('Request failed'));\n\nexport default request;\n","import request from './request';\n\nconst SWAPI_URL = 'https://swapi.dev/api/';\n\nconst getPeople = () => request(`${SWAPI_URL}people`);\n\nexport default getPeople;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comments.scss';\n\nexport const Comments = ({ deleteComment, comments }) => (\n  <div className=\"comments\">\n    <h4>Hero comments:</h4>\n    {comments && comments.map((comment) => (\n      <div\n        className=\"comments__item\"\n        key={comment.id}\n      >\n        <p>{comment.title}</p>\n        <button\n          type=\"button\"\n          className=\"comments__button\"\n          onClick={() => deleteComment(comment.id)}\n        >\n          X\n        </button>\n      </div>\n    ))}\n  </div>\n);\n\nComments.propTypes = {\n  deleteComment: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nComments.defaultProps = {\n  comments: [],\n};\n","import React, {\n  useState, useRef, useEffect,\n} from 'react';\nimport './PeopleList.scss';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Comments } from '../comments/Comments';\n\nexport const PeopleList = ({ name, birth, humanId }) => {\n  const [comments, setComments] = useState([]);\n  const commentRef = useRef(null);\n\n  useEffect(() => {\n    const commentBox = JSON.parse(localStorage.getItem(`${humanId}`));\n    if (!commentBox) {\n      return;\n    }\n    setComments(commentBox);\n  }, []);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const userComment = commentRef.current.value;\n    if (!userComment) {\n      return;\n    }\n\n    const prepearedComment = {\n      title: userComment,\n      id: uuidv4(),\n    };\n    commentRef.current.value = '';\n\n    setComments((prevComments) => {\n      const newComments = [\n        ...prevComments,\n        prepearedComment,\n      ];\n      localStorage.setItem(`${humanId}`, JSON.stringify(newComments));\n      return newComments;\n    });\n  }\n\n  function removeComment(id) {\n    setComments((prevComment) => {\n      const filteredComments = prevComment.filter((comment) => comment.id !== id);\n      localStorage.setItem(`${humanId}`, JSON.stringify(filteredComments));\n      return filteredComments;\n    });\n  }\n\n  return (\n    <section className=\"section\">\n      <div\n        className=\"human-info\"\n      >\n        <h3>{name}</h3>\n        <p>\n          Year:\n          {birth}\n        </p>\n        <form\n          className=\"human-info__form\"\n          onSubmit={(event) => submitHandler(event)}\n        >\n          <button\n            type=\"submit\"\n            className=\"human-info__button button is-small is-success\"\n          >\n            Add Comment\n          </button>\n          <textarea\n            placeholder=\"Write a comment\"\n            ref={commentRef}\n            className=\"human-info__textarea textarea is-small is-hovered\"\n            required\n          />\n        </form>\n      </div>\n      <Comments\n        deleteComment={removeComment}\n        comments={comments}\n      />\n    </section>\n  );\n};\n\nPeopleList.propTypes = {\n  humanId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  birth: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'bulma';\nimport 'semantic-ui-css/semantic.min.css';\nimport getPeople from './api/people';\nimport './App.scss';\nimport { PeopleList } from './components/peopleList';\nimport Loader from './components/Loader/Loader';\n\nconst App = () => {\n  const [heroes, setHeroes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const heroFromLocalStorage = JSON.parse(localStorage.getItem('people'));\n    if (!heroFromLocalStorage) {\n      getPeople().then((allHeroes) => {\n        const prepearedHeroes = allHeroes.map((human) => ({\n          ...human,\n          id: uuidv4(),\n        }));\n        return prepearedHeroes;\n      }).then((heroesWithId) => {\n        setHeroes(heroesWithId);\n        localStorage.setItem('people', JSON.stringify(heroesWithId));\n        setLoading(false);\n      });\n    }\n    setHeroes(heroFromLocalStorage);\n    setLoading(false);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h2> Star Wars heroes: </h2>\n\n      {loading || !heroes\n        ? <Loader />\n        : (\n          <div className=\"App__table heroes\">\n            <ul className=\"heroes__list\">\n              {heroes.map((human) => (\n                <li className=\"heroes__item\" key={human.id}>\n                  <PeopleList\n                    humanId={human.id}\n                    name={human.name}\n                    birth={human.birth_year}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}