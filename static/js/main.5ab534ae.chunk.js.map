{"version":3,"sources":["api/request.js","api/people.js","components/peopleList/PeopleList.jsx","components/Loader/LoaderBall.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["request","url","fetch","then","response","json","result","results","catch","Error","getPeople","PeopleList","name","birth","useState","comments","setComments","commentRef","useRef","className","onSubmit","event","preventDefault","userComment","current","value","prepearedComment","title","id","uuidv4","prevVal","submitHandler","type","placeholder","ref","required","map","comment","onClick","prevComment","filter","LoaderBall","Segment","Dimmer","active","Loader","indeterminate","Image","src","App","people","setPeople","loading","setLoading","useEffect","allPeople","prepearedPeople","human","birth_year","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kLAOeA,G,YALC,SAACC,GAAD,OAASC,MAAMD,GAC5BE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAYA,EAAOC,WACxBC,OAAM,kBAAM,IAAIC,MAAM,uBCCVC,EAFG,kBAAMV,EAAQ,GAAD,OAFb,yBAEa,Y,+BCGlBW,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAaC,iBAAO,MA6B1B,OACE,0BAASC,UAAU,UAAnB,UACE,sBACEA,UAAU,aADZ,UAGE,6BAAKP,IACL,sCAEGC,KAEH,uBACEM,UAAU,mBACVC,SAAU,SAACC,GAAD,OAvClB,SAAuBA,GACrBA,EAAMC,iBAEN,IAAMC,EAAcN,EAAWO,QAAQC,MACvC,GAAKF,EAAL,CAIA,IAAMG,EAAmB,CACvBC,MAAOJ,EACPK,GAAIC,eAENZ,EAAWO,QAAQC,MAAQ,GAE3BT,GAAY,SAACc,GAAD,4BACPA,GADO,CAEVJ,QAuByBK,CAAcV,IAFrC,UAIE,wBACEW,KAAK,SACLb,UAAU,6BAFZ,yBAMA,0BACEc,YAAY,kBACZC,IAAKjB,EACLE,UAAU,oDACVgB,UAAQ,UAId,sBAAKhB,UAAU,WAAf,UACE,iDACCJ,GAAYA,EAASqB,KAAI,SAACC,GAAD,OACxB,sBACElB,UAAU,iBADZ,UAIE,4BAAIkB,EAAQV,QACZ,wBACEK,KAAK,SACLb,UAAU,mBACVmB,QAAS,kBA9CEV,EA8CkBS,EAAQT,QA7C/CZ,GAAY,SAACuB,GAEX,OADyBA,EAAYC,QAAO,SAACH,GAAD,OAAaA,EAAQT,KAAOA,QAF5E,IAAuBA,GA2Cb,iBAHKS,EAAQT,c,oCCpDVa,EAZI,kBACjB,8BACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,CAAQC,eAAa,EAArB,+BAGF,cAACC,EAAA,EAAD,CAAOC,IAAI,gDC+BFC,EApCH,WACV,MAA4BnC,mBAAS,IAArC,mBAAOoC,EAAP,KAAeC,EAAf,KACA,EAA8BrC,oBAAS,GAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,qBAAU,WACR5C,IAAYP,MAAK,SAACoD,GAChB,IAAMC,EAAkBD,EAAUnB,KAAI,SAACqB,GAAD,mBAAC,eAClCA,GADiC,IAEpC7B,GAAIC,mBAENsB,EAAUK,GACVH,GAAW,QAEZ,IAGD,sBAAKlC,UAAU,MAAf,UACE,2CAECiC,EACG,cAAC,EAAD,IAEA,qBAAKjC,UAAU,YAAf,SACE,oBAAIA,UAAU,kBAAd,SACG+B,EAAOd,KAAI,SAACqB,GAAD,OACV,oBAAItC,UAAU,kBAAd,SACE,cAAC,EAAD,CAAYP,KAAM6C,EAAM7C,KAAMC,MAAO4C,EAAMC,WAAY9B,GAAI6B,EAAM7B,MAD9B6B,EAAM7B,eCpB5C+B,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1D,MAAK,YAEnB,IADL2D,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAG1BX,K","file":"static/js/main.5ab534ae.chunk.js","sourcesContent":["export const swapiUrl = '/swapi.dev/api/';\n\nconst request = (url) => fetch(url)\n  .then((response) => response.json())\n  .then((result) => result.results)\n  .catch(() => new Error('Request failed'));\n\nexport default request;\n","import request from './request';\n\nconst SWAPI_URL = 'https://swapi.dev/api/';\n\nconst getPeople = () => request(`${SWAPI_URL}people`);\n\nexport default getPeople;\n","import React, {\n  useState, useRef,\n} from 'react';\nimport './PeopleList.scss';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const PeopleList = ({ name, birth }) => {\n  const [comments, setComments] = useState([]);\n  const commentRef = useRef(null);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const userComment = commentRef.current.value;\n    if (!userComment) {\n      return;\n    }\n\n    const prepearedComment = {\n      title: userComment,\n      id: uuidv4(),\n    };\n    commentRef.current.value = '';\n\n    setComments((prevVal) => [\n      ...prevVal,\n      prepearedComment,\n    ]);\n  }\n\n  function removeHandler(id) {\n    setComments((prevComment) => {\n      const filteredComments = prevComment.filter((comment) => comment.id !== id);\n      return filteredComments;\n    });\n  }\n\n  return (\n    <section className=\"section\">\n      <div\n        className=\"human-info\"\n      >\n        <h3>{name}</h3>\n        <p>\n          Year:\n          {birth}\n        </p>\n        <form\n          className=\"human-info__form\"\n          onSubmit={(event) => submitHandler(event)}\n        >\n          <button\n            type=\"submit\"\n            className=\"button is-small is-success\"\n          >\n            Add Comment\n          </button>\n          <textarea\n            placeholder=\"Write a comment\"\n            ref={commentRef}\n            className=\"human-info__textarea textarea is-small is-hovered\"\n            required\n          />\n        </form>\n      </div>\n      <div className=\"comments\">\n        <h4>Saved comments:</h4>\n        {comments && comments.map((comment) => (\n          <div\n            className=\"comments__item\"\n            key={comment.id}\n          >\n            <p>{comment.title}</p>\n            <button\n              type=\"button\"\n              className=\"comments__button\"\n              onClick={() => removeHandler(comment.id)}\n            >\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nPeopleList.propTypes = {\n  name: PropTypes.string.isRequired,\n  birth: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport {\n  Dimmer,\n  Loader, Image,\n  Segment,\n} from 'semantic-ui-react';\n\nconst LoaderBall = () => (\n  <div>\n    <Segment>\n      <Dimmer active>\n        <Loader indeterminate>Preparing Files</Loader>\n      </Dimmer>\n\n      <Image src=\"/images/wireframe/short-paragraph.png\" />\n    </Segment>\n  </div>\n);\n\nexport default LoaderBall;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'bulma';\nimport 'semantic-ui-css/semantic.min.css';\nimport getPeople from './api/people';\nimport './App.scss';\nimport { PeopleList } from './components/peopleList';\nimport LoaderBall from './components/Loader/LoaderBall';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople().then((allPeople) => {\n      const prepearedPeople = allPeople.map((human) => ({\n        ...human,\n        id: uuidv4(),\n      }));\n      setPeople(prepearedPeople);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h2> people: </h2>\n\n      {loading\n        ? <LoaderBall />\n        : (\n          <div className=\"App-table\">\n            <ul className=\"App-table__list\">\n              {people.map((human) => (\n                <li className=\"App-table__item\" key={human.id}>\n                  <PeopleList name={human.name} birth={human.birth_year} id={human.id} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}